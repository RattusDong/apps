import as "glass" from "packages"
import "window_tools" as "wt"

permission "request" "rotur token"

token = roturToken()

current_version = 3.1

// automatically update claw
promise.new(def() -> (
  local version = "https://raw.githubusercontent.com/RoturTW/apps/refs/heads/main/all/claw/info.json".httpGet()
    .JsonParse()
    .version.toNum()
    
  if version > current_version (
    try (
      file "open" window.file.uuid "onlyaccess"
      local code = "https://raw.githubusercontent.com/RoturTW/apps/refs/heads/main/all/claw/script.osl".httpGet()
      if code.split("\n").len == 1 (
        return
      )
      file "set" 4 code
      say "New update installed"
      window.restart()
    )
  )
))

posts = {
  "got": true,
  "feed":"Loading"
}

api = "https://social.rotur.dev/"

url = "feed"

max_post_length = 100
owns_premium = ("https://social.rotur.dev/keys/check/" ++ username ++ "?key=bd6249d2b87796a25c30b1f1722f784f").httpGet().owned

if owns_premium (
  max_post_length = 300
)
// you cant change this, its verified server side

post_response = ""

users = {}

attachment = ""
user_profile = ""
overlay = ""

proxy = "https://proxy.mistium.com?url="

window "set_dragbox" [[2,2,30,0],[-2,2,-100,-40]]
window "dimensions" 1200 700
window "min_size" 800 700

def getAvatar(username) (
  return "https://avatars.rotur.dev/" ++ username ++ "?radius=256px&s=100"
)

def "send_post" "attachment" (
  void promise.new((def() -> (
    local url = api ++ "post?os=originOS&auth=" ++ token
    url ++= "&content=" ++ encodeURIComponent(inputs.claw.join("\n"))
    if attachment != "" (
      url ++= "&attachment=" ++ encodeURIComponent(attachment)
    )
    local response = url.httpGet()
    if response.error != null (
      say response.error
    ) else (
      inputs.claw = [""]
    )
  )).bind(this))
)

def "repost" "id" (
  local url = api ++ "repost?auth=" ++ token ++ "&id=" ++ id
  void url.getAsync()
)

def "delete_post" "id" (
  local url = api ++ "delete?auth=" ++ token ++ "&id=" ++ id
  void url.getAsync()
)

def "set_rating" "id, rating" (
  local url = api ++ "rate?auth=" ++ token ++ "&id=" ++ id ++ "&rating=" ++ rating.toNum()
  void url.getAsync()
)

def "load_profile" "username" (
  posts.got = false
  posts.feed = []
  url = "profile?auth=" ++ token ++ "&name=" ++ username
  hovered_post = ""
)

def "render_post" "w, h, post, offset_y, reply" (
  local isRepost = typeof(post.original_post) == "object"
  local id = post.id
  local poster = post.user
  if isRepost (
    post = post.original_post
  )

  local user = post.user.toLower()
  
  loc 9999 2 0 y
  square w h 10 : c#window_colour
  if mouse_touching (
    square w h 15 : c#seco
    square w h 10 : c#prim
    square w h - 70 10 0 1
    if onclick and reply.not() (
      posts.feed = post.replies
      posts.data = post
      posts.data.username = post.user
      
      url = "Post_" ++ post.id
    )
  )
  
  loc 2 2 40 y + offset_y - 7
  image getAvatar(user) 40 40
  text post.user 11 : c#txtc chx#35
  if onclick (
    load_profile user
  )
  if post.premium (
    square 15 15 10 : c#seco chx#20 chy#2
    icon "tick" 0.5 : c#txtc
  )
  
  if reply.not() (
    loc 2 2 25 y - offset_y
    if isRepost (
      icon "sync" 0.5 : chx#10
      text "Reposted by " ++ poster 8 : chx#20
    ) else (
      text "Posted From " ++ (post.os ?? "Unknown") 8
    )
    local time = post.timestamp
    if timestamp - time > 128000000 (
      time = time.timestamp("convert-date")
    ) else (
      time = time.timestamp("convert-relative")
    )
    local tw = time.len * 8
    text time 8 : chx#8
    
    loc -2 2 -30 y - offset_y
    local likes = post.likes
    if likes == "" (
      local total_likes = 0
      local i_liked = false
    ) else (
      local total_likes = likes.len
      local i_liked = likes.contains(username.toLower())
    )
    icon i_liked ? "favorites-full" "favorites" 0.8
    if onclick (
      feed[count].likes ??= []
      set_rating post.id 1 - i_liked.toNum()
    )

    change_x total_likes.len * -8 - 20
    text total_likes 8
    
    change_x -40
    icon "w 4 cutcircle 0 -5 10 4 45 w 4.1 line 10 -10 10 -5 line 0 5 -10 5 cont -5 0 line -10 5 -5 10" 0.7
    local total_replies = (post.replies ?? []).len
    change_x total_replies.len * -8 - 20
    text total_replies 8
    
    if poster == username (
      icon "bin" 0.8 : chx#-55 tooltip#"Delete My Post"
      if onclick (
        delete_post id
      )
    ) else if original_post.profile_only != "true" (
      if isRepost.not() (
        icon "sync" 0.6 : chx#-50 tooltip#"Repost This"
        if onclick (
          repost post.id
          load_profile username
        )
      )
    )
  )
  if post.attachment == null (
    local offset = 0
  ) else (
    local offset = 10
    loc -2 2 -70 y
    icon "image" 0.8
    image post.attachment 100 100
    if clicked (
      overlay = post.attachment
    )
  )
  loc 2 2 25 y + 17
  text post.content.replace("\n"," ").wrapText(w / 9 - 1 - offset) 9
)

def "render_main" "feed" (
  local ih = 180
    
  local len = feed.len
  count = floor(scroll_yfeed / ih).clamp(0,100)
  y = scroll_yfeed % ih - (ih / 2) + 4
  
  local w = frame.width - 25
  loop floor(window_height / ih + 1).clamp(0,len) (
    count ++
    if count > len (
      return
    )
    local h = ih - 20
    
    render_post w h main_feed_obj[feed[count].id] ?? feed[count] (h / 2 - 20) url.startsWith("Post_")
    y -= ih
  )
)

def "side_button" "this.icn, this.txt, this.callback" (
  square 450 0 30 0 1
  if mouse_touching (
    cursor "pointer"
    if onclick (
      return callback()
    )
  )
  icon icn 0.7 : c#txtc
  change_x icn == "" ? -15 30
  
  text txt 10 : c#txtc
)

def "claw_input" "y, w, onsend, message" (
  goto x y
  square w 90 10 : c#window_colour

  change_y 10
  textbox w - 5 66 "claw" 10 {
    line_numbers: false,
    default_text: "Type your post here",
    sel_colour: seco
  }
  local inp = inputs.claw.join("\n")
  inputs.claw = inp
    .trim(1,max_post_length)
    .split("\n")
  
  change w / -2 + 5 -45
  text inp.len ++ "/" ++ max_post_length 8 : c#txtc

  change_x 40
  text "Click Here To Paste An Image URL" 8
  if onclick (
    attachment = clipboard
    if attachment.startsWith("https://").not() (
      attachment = ""
      say "Invalid, must be https:// image"
    )
  )
  if attachment != "" (
    image attachment 30 30 : chx#30
  )
  goto 120 + (w / 2) y - 35
  icon "send" 0.6
  if onclick (
    onsend()
  )
)

string social = "socialws.rotur.dev".newWebsocket()

array main_feed = []
object main_feed_obj = {}
object sidebar = {
  "message": def() -> (
    url = "feed"
  ),
  "w 3 cutcircle -2 2 8 0 180 w 3.5 line 4 -4 12 -12": def() -> (
    posts.got = false
    url = "search_posts?q=" ++ "Search for something".ask()
  ),
  "favorites-full": def() -> (
    posts.got = false
    url = "following_feed?auth=" ++ token
  ),
  "up-arrow": def() -> (
    posts.got = false
    url = "top_posts?time_period=168"
  ),
  "rotur": def() -> (
    posts.got = true
    url = "premium"
  )
}


mainloop:

page_label = "Claw"
if owns_premium (
  page_label ++= " Premium"
)

if social.wsOpen() (
  if social.wsHasnew() (
    object current = social.wsGetnext()
    switch current.cmd (
      case "posts"
        main_feed = current.val
        for i main_feed.len (
          main_feed_obj[main_feed[i].id] @= main_feed[i]
        )
        break
      case "new_post"
        local id = current.val.id
        main_feed_obj[id] @= current.val
        void main_feed.append(main_feed_obj[id])
        break
      case "update_post"
        local id = current.val.id
        local key = current.val.key
        main_feed_obj[id][key] = current.val.data
        main_feed = main_feed_obj.getValues()
        if url.startsWith("Post_") (
          posts.data[key] = current.val.data
          if key == "replies" (
            posts.feed = current.val.data
          )
        )
        break
      case "delete_post"
        local id = current.val.id
        void main_feed_obj.delete(id)
        main_feed = main_feed_obj.getValues()
        break
      case "followers"
        if typeof(posts.data.followers) == "number" and current.val.username == posts.data.username (
          posts.data.followers = current.val.followers
        )
        break
    )
  )
) else if network.connected (
  social = "socialws.rotur.dev".newWebsocket()
)

w = window

goto 135 0
square w.width - 270 w.height 10 : c#window_colour


theme = user.theme
if url.startsWith("Post_") (
  post_id = url.split("_")[2]
) else if posts.data.theme (
  theme = posts.data.theme
)

goto -window.x -window.y
image "wallpaper_blur" background_width background_height 
goto 0 0
pen "size" w.width + w.height
c window_colour
pen "opacity" 50
pen "down"
pen "up"
prim = theme.primary
seco = theme.secondary
tert = theme.tertiary
txtc = theme.text
window_accent = theme.accent
window_colour = theme.background

frame w.left w.top w.left + 265 w.bottom (
  goto 0 0
  pen "opacity" 80
  pen "size" 210
  goto frame.left + 160 frame.top
  pen "down"
  set_y frame.bottom
  pen "up"
)

top = w.top - 170
x = 130

if url == "premium" (
  frame x - 408 w.top - 40 x + 408 w.bottom (
    goto 0 0
    square frame.width - 30 frame.height - 30 10 : c#window_colour
    goto 0 200
    icon "rotur" 3 : c#txtc
    change_y -60
    centext "Claw Premium" 15
    
    change_y -50
    centext "What do you get?" 10
    
    y = window.top - 740
    render_post 790 170 {
      "id": "",
      "content": "When you buy claw premium you get the ability to send posts up to 300 characters in length and a cool badge next to your name!",
      "user": "Mist",
      "timestamp": 1743165080311,
      "attachment": null,
      "profile_only": false,
      "os": "Rotur Land",
      "premium": true
    } 65 false
    
    
    change_y -150
    if owns_premium (
      square 150 30 20 : c#prim
      if mouse_touching (
        square 150 30 25 : c#seco
        square 150 30 20 : c#prim
        if onclick (
          promise.new(def() -> (
            local response = (api ++ "keys/cancel/bd6249d2b87796a25c30b1f1722f784f?auth=" ++ token).httpGet()
            say response.message ?? response.error
            window.restart()
          ))
        )
      )
      centext "Unsubscribe :(" 10 : c#txtc
    
      change_y -50
      centext "Hello Claw Premium user!" 10
    ) else (
      square 150 30 20 : c#prim
      if mouse_touching (
        square 150 30 25 : c#seco
        square 150 30 20 : c#prim
        if onclick (
          promise.new(def() -> (
            local response = (api ++ "keys/buy/bd6249d2b87796a25c30b1f1722f784f?auth=" ++ token).httpGet()
            say response.message ?? response.error
            window.restart()
          ))
        )
      )
      centext "Subscribe Now!" 10 : c#txtc
    
      change_y -50
      centext "Cost: 5 rotur credits a month, cancel here" 10
    )
  )
) else (
  if posts.got (
    c prim
    len = posts.feed.len
    
    if url == "feed" (
      posts.feed = main_feed.reverse()
      x += 3
      claw_input w.top - 110 797 def() -> (
        send_post attachment
        attachment = ""
      ) "Type your post..."
      x -= 3
    ) else if url.startsWith("Post_") (
      page_label ++= ": Post by " ++ posts.data.user
      top -= 190
      posts.feed = posts.data.replies
      
      frame x - 408 w.top - 50 x + 408 top - 110 (
        y = -100
        render_post 790 170 posts.data 65
      )
      
      claw_input w.top - 300 790 def() -> (
        c (api ++ "reply?id=" ++ posts.data.id ++ "&auth=" ++ token ++ "&content=" ++ encodeURIComponent(inputs.claw)).getAsync()
        attachment = ""
      ) "Reply to this post..."
    ) else (
      top = w.top - 60
    )
    
    if url.startsWith("profile") (
      page_label ++= ": " ++ posts.data.username ++ "'s profile"
    )
    if url.startsWith("top_posts") (
      page_label ++= ": Most likes in the past week"
    )
    if url.startsWith("following_feed") (
      page_label ++= ": Posts from users I follow"
    )
    
    c prim
  
    frame x - 408 top x + 408 w.bottom len * 180 "feed" (
      render_main posts.feed
    )
  ) else (
    posts.feed = (api ++ url).getAsync()
    if posts.feed != "Loading" (
      posts.got = true
      if url.startsWith("profile?") (
        posts.data = posts.feed
        posts.feed = posts.feed.posts
        void posts.data.delete("posts")
      )
    )
  )
)

x = w.left + 25

set_x x + 2
set_y w.top - 25
local icons = sidebar.getKeys()
for i icons.len (
  c txtc
  change_y -50
  icon icons[i] 1
  if onclick (
    sidebar[icons[i]]()
  )
)

w.left += 50
x += 50

if url.startsWith("profile").not() and url.startsWith("Post_").not() (
  set_x w.left + 110
  set_y w.top - 150
  
  image getAvatar(username) 200 200
  change_y -120
  centext user.username 10 : c#txtc
  if onclick (
    load_profile user.username
  )

  set_x w.left + 10 : chy#-30
  text (user.bio ?? "You can set a bio in originOS settings").wrapText(22) 9
) else if posts.got (
  set_x w.left + 110
  set_y w.top - 150
  frame w.left + 10 w.top - 30 w.left + 210 w.bottom (
    square frame.width 100 0 : c#posts.data.theme.accent
    image "https://avatars.rotur.dev/.banners/" ++ posts.data.username null 100
  )
  change_y -40
  image getAvatar(posts.data.username) 100 100
  change_y -70
  centext posts.data.username 10 : c#txtc
    
  set_x w.left + 10 : chy#-30
  text (posts.data.bio ?? "").wrapText(22) 9
  
  if url.startsWith("Post_") (
    set_x x : chy#-50
    side_button "info" "View Profile" def() -> (
      load_profile posts.data.username
    )
  ) else (
    set_x x - 10 : chy#-50
    text posts.data.followers ++ (posts.data.followers == 1 ? " Follower" " Followers") 10
  )

  if posts.data.username != user.username (
    set_x x : chy#-50
    if posts.data.followed (
      side_button "tick" "Unfollow" def() -> (
        local url = api ++ "unfollow?auth=" ++ token ++ "&username=" ++ posts.data.username
        posts.data.followed = false
        void url.getAsync()
      )
    ) else (
      side_button "tick" "Follow" def() -> (
        local url = api ++ "follow?auth=" ++ token ++ "&username=" ++ posts.data.username
        posts.data.followed = true
        void url.getAsync()
      )
    )
  )
   
  set_x x : chy#-50
  side_button "left-arrow" "Back To Feed" def() -> (
    url = "feed"
  )
)

goto 0 w.top - 20
square w.width 40 10 : c#window_colour

c txtc
loc 2 2 10 -20
text page_label 10

if overlay != "" (
  goto 0 0
  c window_colour
  pen "opacity" 90
  pen "size" window.width + window.height
  pen "down"
  pen "up"
  image overlay 600
  if mouse_ondown (
    overlay = ""
  )
)

import "win-buttons"
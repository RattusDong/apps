object base = {
  "op":2,
  "d": {
    "token": "", 
    "intents": 4194303,
    "properties": {
      "$os": "originOS",
      "$browser": system_browser,
      "$device": system_os
    }
  },
  "s": null,
  "t": null
}
// base packet


window.resize(1000, 600)
window "responsive" true


origincord_logo = "c #5865f2 w 20 dot 0 0 c #fff w 3 line 3 2 5 -2 cont 3 -3 cont 2 -2 cont -2 -2 cont -3 -3 cont -5 -2 cont -3 2.5 cont -2 2.5 cont -1 1.7 cont 1 1.7 cont 2 2.5 cont 3 2.5 cont 5 -2 w 4.5 line -2 0 2 0 c #5865f2 w 2.5 dot 2 -1 dot -2 -1"

// get system properties
loaded = []

proxy = "https://apps.mistium.com/cors?url="

status_colours = {
  "online":"#23a55a",
  "idle":"f0b232",
  "dnd":"#f23f43",
  "offline":"#80848e"
}

// guilds
def "guild_copy_id" "guild" (; clipboard "set" guild.id ;)

guild_menu = [
  {"Copy Guild Id": "guild_copy_id"}
]

// Channels
def "channel_copy_id" "chnl" (; clipboard "set" chnl.id ;)

channel_menu = [
  {"Copy Channel Id": "channel_copy_id"},
]

// Messages
def "message_copy" "msg" (; clipboard "set" msg.content;)
def "message_reply" "msg" (; current_reply = msg;)

def "message_delete" "msg" (
  void ("https://apps.mistium.com/discord-delete-message?channelid=" ++ current_channel ++ "&messageid=" ++ msg.id ++ "&token=" ++ token ++ "&user_account=" ++ discord_isUser).getAsync()
)

message_menu = [
  {"Copy Message Text": "message_copy"},
  {"Reply To Message": "message_reply"},
  {"Delete Message": "message_delete"}
]

def "user_dm" "user" (
  local url = "https://apps.mistium.com/get-dm-channel?userid=" ++ user ++ "&token=" ++ token ++ "&user_account=" ++ discord_isUser
  current_channel = url.http("GET",{},{})
)

user_menu = [
  {"Message User": "user_dm"}
]

def "connect" (
  discord = "gateway.discord.gg/?v=9&encoding=json:443".newWebsocket()
)

def doProxy(url) (
  return proxy ++ encodeURIComponent(url)
)

def "login" "token" (
  status = "online"
  
  base.d.token = token
  
  discord.wsSend(base)
  heartbeat_msg = {
    "op":1,
    "d":null
  }
  last_heartbeat = timer + 41.25
)

def "setStatus" "type,title" (
  status = {
    "op": 3,
    "d": {
      "since": null,
      "activities": [{
        "name": "originCord",
        "type": 0
      }],
      "status": "online",
      "afk": false
    }
  }

  discord.wsSend(status)
)

def "send_sticker" "this.sticker_id, this.channel" (
  api = "https://apps.mistium.com/send-discord-sticker?token=" ++ token ++ "&channelid=" ++ channel ++ "&stickerid=" ++ sticker_id ++ "&user_account=" ++ discord_isUser
  api.getAsync()
)

def "heartbeat" (
  if last_heartbeat < timer (
    last_heartbeat = timer + 41.25
    discord.wsSend(heartbeat_msg)
  )
)

def "send_file" "content, channel, file_name, file_content" (
  local obj = {
    "channelid": channel,
    "content": content,
    "filename": file_name,
    "token": token
  }
  local obj.dataURI = file_content.startsWith("data:") ? file_content file_content.makeUrl("text/plain")
  
  void ("https://apps.mistium.com/upload-discord-file?user_account=" ++ discord_isUser).http("POST", obj, {"Content-Type":"application/json"})
)

import as "window_tools"
import as "glass" from "packages"

round_pfp = "w 2 line 11 11 11 -11 cont -11 -11 cont -11 11 cont 11 11 cutcircle 9 9 2 4. 45 cutcircle 9 -9 2 13.5 40 cutcircle -9 9 2 -4.5 45 cutcircle -9 -9 2 -13.5 45"
circle_pfp = "w 3 cutcircle 0 0 17 0 180 w 3.5 cutcircle 0 0 20 4.5 10 cutcircle 0 0 20 13.5 10 cutcircle 0 0 20 22.5 10 cutcircle 0 0 20 31.5 10 line 17 17 17 -17 cont -17 -17 cont -17 17 cont 17 17"

window_tools:seticon origincord_logo
permission "request" "notifications"
permission "request" "file admin"

save "originCord@mistium" "set_directory"

def "disc_connect" (
  connect
  wait 1
  login token_in
  token = token_in
  activity_data = [{
    "name":"originCord",
    "type":1
  }]
)

messages = {}
edits = {}
previous_author = {}

def "async_msg" "content, channel" (
  link = "https://apps.mistium.com/send-discord-message?token=" ++ token ++ "&channelid=" ++ channel ++ "&content=" ++ encodeURIComponent(content.toStr()) ++ "&user_account=" ++ discord_isUser
  void link.getAsync()
)

def addAttachment(attachment, height) (
  local app = height.newArray() ++ [["","","","","","",""]] ++ height.newArray()
  attachment.content_height = height
  attachment.url = doProxy(attachment.url)
  app[height+1][5] = attachment
  return app
)

def makepfp(aut) (
  local av = aut.avatar
  if av == "" (
    return "https://raw.githubusercontent.com/Mistium/apps/main/all/origincord/assets/no-pfp.jpg"
  ) else (
    return doProxy("https://cdn.discordapp.com/avatars/" ++ aut.id ++ "/" ++ av ++ ".png?size=128")
  )
)

def "drawemoji" "id, size" (
  image doProxy("https://media.discordapp.net/emojis/" ++ id ++ ".png?size=64&quality=lossless") size size
)

def "focusChannel" "id" (
  local guild = current_guild
  if guild != "@me" and discord_isUser == 1 (
    guild = current_guild[4]
    local packet = {
      "op":37,
      "d":{
        subscriptions:{}
      }
    }
    packet.d.subscriptions[guild] = {channels:{}}
    packet.d.subscriptions[guild].channels[id] @= [[0,99]]
    discord.wsSend(packet)
  )
  guilds_last_channels[guild] = current_channel
  current_channel = id
)


def "loadDm" "this.chnl, this.user" (
  current_member_ids @= chnl.recipients.getKeys("id").append(discord_id)
  current_members @= chnl.recipients.append(discord_user).map(def(user) -> (
  return {"user": user ++ {
    pfp: makepfp(user),
    colour: txtc,
    name: displayNameOf(user)
  }}))
)

def makeSticker(id) (
  return "https://media.discordapp.net/stickers/" ++ id ++ ".png?size=240&quality=lossless"
)

def memFromId(id) (
  return current_members[current_member_ids.index(id)]
)

def "handle_message" "msg, ping" (
  if msg.istype("object") (
    local member @= memFromId(msg.author.id)
    local type = msg["type"]
    
    if msg.webhook_id != null (
      msg.author.colour = txtc
      msg.author.pfp = makePfp(msg.author)
      local name = msg.author.username
      msg.author.name = name
    ) else if member != null (
      msg.author = member.user
      local name = member.user.name
    ) else (
      msg.author.pfp = makePfp(msg.author)
      msg.author.name = displayNameOf(msg.author)
    )
    
    local channel = msg.channel_id.toStr()
    // channel is passed as global
    messages[channel] ??= []
    msg_cha @= messages[channel]
    
    content = msg.content
    local authid = msg.author.id ++ "/" ++ msg.author.username
    local isreply = type == 19
    
    if isreply (
      local referenced = msg.referenced_message
      
      local mem = memFromId(referenced.author.id)
      
      msg_cha.append([
        "",
        mem.user.name + referenced.content.replace("\n"," "),
        "reply",
        false,
        "",
        msg,
        message
      ])

      authid = ""
    )
    local date_diff = msg_cha[-1][5].timestamp.timestamp("to-date").trim(1,-4) != msg_data.timestamp.timestamp("to-date").trim(1,-4)
    if previous_author[channel] != authid or isreply or date_diff (
      void msg_cha.append("")
      previous_author[channel] = authid
      message = []
      if type == 7 (
        message.append("Welcome: " ++ name)
      ) else (
        message.append(name)
      )
      void message
        .append("")
        .append("")
        .append(false)
        .append(member.user.colour ?? txtc)
        .append(msg)
      
      msg_cha.append(message)
    )
    if content.len > 0 (
      emoji_match = content.toStr().strip().match("/^<a?:[^:]+:(\d+)>$/")
      if emoji_match.len > 0 (
        msg_cha = addAttachment({
          url: "https://media.discordapp.net/emojis/" ++ emoji_match[2] ++ ".png?size=128&quality=lossless",
          filetype: "image"
        },1)
      ) else (
        local cur_content = content.match("/<[^ >]+>|[^<>\[\]()]+|./gm")
        if cur_content.len == 1 and cur_content[1].startsWith("<").not() (
          local cur_content = cur_content[1]
        )
        
        msg_cha.append(["",cur_content,"",ping,"",msg])
        messages[channel] @= msg_cha
      )
    )
    local stickers = msg.sticker_items
    if stickers.len > 0 (
      msg_cha ++= addAttachment({
        "url": makeSticker(stickers[1].id),
        "filetype": "image"
      },3)
    )
    all_messages_by_id[msg.id] @= msg
  )
)

def displayNameOf(user) (
  local name = user.nick
  local name ??= user.display_name
  local name ??= user.global_name
  local name ??= user.username
  return name
)

def "handle_guild" "dat" (
  
  local roles_obj = {}
  
  each role dat.roles (
    roles_obj[role.id] = role
  )
  
  roles[dat.id] = roles_obj
  
  if dat.icon == null (
    guild_icon = null
  ) else (
    guild_icon = proxy ++ encodeURIComponent("https://cdn.discordapp.com/icons/" ++ dat.id ++ "/" ++ dat.icon ++ ".png?size=64")
  )
  channels = dat.channels.sortBy("position")
  categories = {"null":[]}
  each channel channels (
    parent = channel.parent_id ?? "null"
    if channel["type"] == 4 (
      parent = channel.id
    )
    categories[parent] = (categories[parent] ?? []).append(channel)
  )

  channels = []
  each cat categories.getValues() (
    channels ++= cat
  )
    
  members = dat.members

  for i members.len (
    _dat = members[i]
    members[i].user.nick = _dat.nick
    members[i].user.name = displayNameOf(members[i].user)
    members[i].user.pfp = makepfp(members[i].user)
  )
  members @= members.sortBy("order").reverse()
  
  each presence dat.presences (
    presences[presence.user.id] = presence
  )
      
  local arr = [
    dat.name,
    guild_icon,
    channels,
    dat.id,
    dat.banner,
    dat.member_count
  ]
  guilds.append(arr)

  local id = dat.id
  if id != null (
    all_members[id] = members
    all_member_ids[id] = members.getKeys("user").getKeys("id")
    stickers[id] = dat.stickers
    guild_objects[dat.id] @= arr
  )
)

def renderGuild(guild) (
  guild_id = guild[4]
  if guild_id == current_guild[4] (
    square 30 30 15 : c#seco
    if guild_id != "" (
      new_messages[guild_id] = false
    )
  ) else (
    square 40 40 10 0 1
    if onclick (
      current_guild_id = guild_id
      current_guild @= guild
      current_channel = guilds_last_channels[current_guild[4]] ?? 0
    )
  )
  if guild == "@me" (
    icon origincord_logo 2
  ) else if guild[2] != null (
    image guild[2] 40 40
  ) else (
    icon "w 30 dot 0 0" 1.3 : c#seco
    local name = guild[1].split(" ").map(val -> (val[1])).join("")
    
    centext name 7 : c#txtc
  )
  icon circle_pfp 1.3 : c#window_colour
  rightclick guild_menu guild
  if guild_id == current_guild[4] (
    icon "w 1.5 cutcircle 0 0 17 0 180" 1.3 : c#seco
  ) else if new_messages[guild_id] == true (
    icon "w 1.5 cutcircle 0 0 17 0 180" 1.3 : c#txtc
  )
)


def "draw_guilds" (
  if window.width !> 700 (
    return
  )

  c window_colour
  frame window.left window.top - 40 window.left + 47 window.bottom guilds_scroll_len "guild" (
    count = 0
    local offset = scroll_yguild - 25
    y = 0
    loc 999 2 0 y + offset
    renderGuild("@me")
    loop guild_folders.len (
      count ++
      y -= 50
      loc 999 2 0 y + offset
      local folder @= guild_folders[count]
      if folder.id != null (
        c prim
        square 20 20 20
        if onclick (
          folder.closed = folder.closed.not()
        )
        c folder.color
        icon "square -4 3 1 1 line -2.5 3.5 1.5 0 square 0 -1 5 2.5 w 4 square 0 -1 4 1" 1.4
        if folder.closed.not() (
          each this.guild folder.guild_ids (
            y -= 50
            loc 999 2 0 y + offset
            renderGuild(guild_objects[guild])
          )
        )
      ) else (
        local g @= guild_objects[folder.guild_ids[1]]
        if g == null (
          y += 50
          continue
        )
        renderGuild(g)
      )
    )
  )
  guilds_scroll_len = -y + 50
)

def "draw_channels" (
  cur @= cur_channels
  c prim
  len = cur.len
  local ih = 45
  
  frame window.left + 50 guild_info_shift window.left + 360 window.bottom + 50 len - 0.5 * ih "channels"
    count = floor(scroll_ychannels / ih)
    w = frame.width - 25
    y = scroll_ychannels % ih + (ih * 0.5 - 5)
  
    loop floor(window_height / ih).clamp(0,len) (
      count ++
      chnl @= cur[count]
      if chnl.istype("object").not() (
        chnl = {}
      )
      y -= ih
      loc 999 2 0 y
   
      id = chnl.id
      if id != null (
        if chnl["type"] !== 4 (
          if current_channel == id (
            square w 25 15 : c#seco
            square w 25 10 : c#window_colour
          ) else if new_messages[id] == true (
            square w 25 15 : c#txtc
            square w 25 10 : c#window_colour
          ) else (
            square w 25 15 : c#window_colour
          )
          rightclick channel_menu chnl
          if onclick (
            if current_guild == "@me" (
              loadDm chnl user
            )
            focusChannel id
          )
          if typing[id].len > 0 (
            local pos @= x -> ((timer + x * 300).sin() * 10)
            loc -2 2 -20 y + pos(0)
            icon "w 4 dot 0 0" 1 : c#txtc
            loc -2 2 -30 y + pos(5)
            icon "w 4 dot 0 0" 1
            loc -2 2 -40 y + pos(10)
            icon "w 4 dot 0 0" 1
          )
        )
      )
      loc 2 2 25 y
      if chnl["type"] != 4 (
        square 25 25 10 : c#prim
      )
      log chnl
      c txtc
      switch chnl["type"] (
        case 0
          // text channel
          text "#" 15 : chx#-7
          change_x 5
          break
        case 1
          // direct message
          image makepfp(chnl.recipients[1]) 30 30
          icon circle_pfp 0.975 : c#window_colour
          change_x 10
          break
        case 2
          // voice channel
          icon "microphone" 0.7 : chx#0.2
          change_x 10
          break
        case 3
          if chnl.icon != null (
            change_x 10
            image doProxy("https://cdn.discordapp.com/channel-icons/" ++ id ++ "/" ++ chnl.icon ++ ".png?size=80") 30 30
            icon circle_pfp 0.975 : c#window_colour
            change_x 30
          ) else (
            text "#" 15 : chx#-7
            change_x 5
            break
          )
          break
        case 4
          // category name
          change_x -20
          break
        case 5
          // announcements
          icon "send" 0.7 : chx#0.2
          change_x 10
          break
        case 13
          // stage
          icon "w 5 dot 0 0 w 2 cutcircle 0 0 5.7 0 130 cutcircle 0 0 10 0 130 line 1 -5.7 -1 -5.7 cont -5 -10 cont 5 -10 cont 1 -5.7 w 6 dot 0 -8" 0.7
          change_x 10
          break
        default
          break
      )
      text chnl.name 10 : c#txtc chx#20
    )
  frame "clear"
)

def "draw_chat" "cur_msgs" (
  local left = window.left
  local top = window.top
  local right = window.right
  if window.width > 700 (
    local left += 360
    local top -= 40
    local right -= shown.sidebar ? 300 30
  )
  if discord_isUser == 0 (
    local right = window.right
  )
  
  local bottom = window.bottom + attachment_offset

  c prim
  len = cur_msgs.len
  input_offset = 40
  local ih = 25
  frame left top right bottom chat_height "chat"
  chat_frame @= frame
  y = scroll_ychat
  local start_y = y
  
  w = frame.width
  for count len (
    msg @= cur_msgs[count]
    if msg == "" (
      y -= ih
      continue
    )
    
    loc 999 2 0 y
    if msg[4] == true (
      square w 20 0 : c#625228
    ) else (
      square w 20 0 0 1
    )
    msg_data @= all_messages_by_id[msg[6].id]
    
    author @= msg_data.author
    hover = mouse_touching
    if hover and msg_data.content != "" (
      rightclick message_menu msg_data
    )
    msg_c = txtc
    if deleted_messages.contains(msg_data.id) (
      msg_c = #f23f43
    )
    
    loc 2 2 40 y
    local txt = msg[2]
    c msg_c
    if msg[3] == "reply" (
      change -5 -25
      icon "w 2 line -5 -10 -5 -5 cutcircle -1 -4 4 -4.5 45 cont 10 0" 1
      text txt == " " ? "Message Not Found" "reply -> " ++ txt 9 : chx#20
    ) else if msg[1] != "" (
      change -10 -10
      image author.pfp 40 40
      icon circle_pfp 1.3 : c#window_colour
      change 30 10
      if author.colour == null (
        author.colour = txtc
      )
      text author.name 10 : c#author.colour
      local time = msg_data.timestamp
      change_x 20
      c global_accent
      if date == time.timestamp("to-date") (
        text time.timestamp("to-time") 9
      ) else (
        text time.timestamp("to-full") 9
      )
      
      rightclick user_menu author.id
    ) else (
      change_x 20
      local oy = y_position
      if msg[2].isType("array") (
        local txt = msg[2]
        each i txt (
          if i[1] == "<" (
            switch i[2] (
              case "@"
                member = memFromId(i.trim(3,-2)).user
                i = "@" ++ member.name
                change_x i.len * 5
                square i.len * 10 20 10 : c#prim
                change_x i.len * -5
                c member.colour ?? txtc
                text i 10
                c msg_c
                break
              case ":"
                change_x 10
                i = i.trim(3,-2)
                
                drawemoji i.trim(i.index(":") + 1,-1) 20
                change_x 10
                break
            )
          ) else (
            text i 10
          )
        )
      ) else (
        text txt.wrapText(frame.width / 10 - 7) 10
      )
      
      local embeds @= msg_data.embeds
      if embeds.len > 0 (
        set_x frame.left + 60 : chy#-30
        for embed_i embeds.len (
          local cur @= embeds[embed_i]
          if cur.provider.name == "Tenor" (
            local url = cur.video.proxy_url
            local aspect_ratio = url.videoinfo("width") / url.videoinfo("height")
            local h = cur.video.height * 2
            local w = h * aspect_ratio
            if w > frame.width - 90 (
              w = frame.width - 90
              h = w / aspect_ratio
            )
            change w / 2 h / -2
            if url.videoinfo("loaded") and url.videoinfo("playing").not() (
              video url "play"
            )
            video url w h
            change w / -2 h / -2
          ) else (
            switch cur["type"] (
              case "image"
                local url = cur.thumbnail.proxy_url
                if ["png","jpg","jpeg"].contains(url.split(".").last()) (
                  local aspect_ratio = url.imageinfo("width") / url.imageinfo("height")
                  local h = cur.thumbnail.height * 2
                  local w = h * aspect_ratio
                  if w > frame.width - 90 (
                    w = frame.width - 90
                    h = w / aspect_ratio
                  )
                  change w / 2 h / -2
                  image doProxy(url) h * aspect_ratio h
                  change w / -2 h / -2
                )
                break
            )
          )
        )
      )
      
      local attachments @= msg_data.attachments
      if attachments.len > 0 (
        att @= attachments[1]
        file_type = att.content_type.split("/")[1]
        local h = att.height
        url = doProxy(att.url)
        local aspect_ratio = att.width / att.height
        local w = h * aspect_ratio
        
        if w > frame.width / 1.5 (
          w = frame.width / 1.5
          h = w / aspect_ratio
        )
        switch file_type (
          case "image"
            set_x frame.left + 60 + (w / 2)
            change_y h / -2 - 20
            image url w h
            change w / -2 h / -2 - 10
            break
          case "video"
            change w / 2 h / -2
            video url w h
            change_y h / -2 - 20
            square w - 10 20 10 : c#prim
            change_x w / -2 + 20
            c txtc
            if url.videoinfo("playing") (
              icon "pause" 0.7
              if onclick (
                video url "pause"
              )
            ) else (
              icon "play" 0.7
              if onclick (
                video url "play"
              )
            )
            break
        )
      )
      
      local reactions @= msg_data.reactions
      if reactions.len > 0 (
        set_x frame.left + 60 : chy#-30
        for react_i reactions.len (
          local cur @= reactions[react_i]
          local react_w = 30 + (cur.count.len * 10) / 2
          
          c prim
          change_x react_w
          square react_w * 2 20 10
          change_x -react_w
          
          c txtc
          if cur.emoji.id != null (
            change_x 10
            drawemoji cur.emoji.id 20
            change_x 10
          ) else (
            text cur.emoji.name 20
          )
          text cur.count 10 : chx#10
          change_x 20
          if x_position > frame.right - 20 (
            set_x frame.left + 60 : chy#-30
          )
        )
        change_y -20
      )
      
      y += y_position - oy
    )
    y -= ih
  )
  frame "clear"
  chat_height = start_y - y
  if chat_height > 3000 (
    void cur_msgs.shift()
  )
)

def "draw_members" "cur_mem" (
  local roles = roles[current_guild[4]]
  local ih = 35
  sidebar_ih = 30
  len = cur_mem.len
  sidebar_len = len
 
  y = scroll_ymembers - (ih / 2)
  
  last_rolename = ""
  w = frame.width
  each this.user cur_mem (
    if user.group != null (
      loc 2 2 20 y
      local role = roles[user.group.id]
      c role.color == 0 ? txtc role.color
      text role.name 10
      y -= ih
      continue
    )
    
    local mem @= user.member
    local presence @= mem.presence

    loc 999 2 0 y
    square w 35 0 : c#window_colour
    rightclick user_menu mem.id
    
    mem.user.nick = mem.nick
    mem.name = displayNameOf(mem.user)
    
    loc 2 2 30 y
    image makepfp(mem.user) 30 30
    icon circle_pfp 0.9 : c#window_colour
    change 10 -10
    c status_colours[presence.status]
    square 0 0 10
    change -10 10
    c mem.colour ?? txtc
    if presence.activities > 0 (
      change_x 20
      local types = ["Playing","Streaming","Listening to","Watching","Custom"]
      local x = x_position
      local activity = presence.activities[1]
      
      text mem.name 10 : chy#5
      set_x x : chy#-15
      if activity["type"] == 4 (
        local activity.name = activity.state
      ) else (
        local activity.name = types[activity["type"]+1] + activity.name
      )
      text activity.name.trimText(30) 8
    ) else (
      text mem.name 10 : chx#20
    )
    
    y -= ih
    if y_position < window.bottom (
      return
    )
  )
)

def "draw_stickers" "cur_stickers" (
  local ih = 100
  sidebar_ih = 100
  cur_stickers @= cur_stickers[current_guild[4]]
  
  len = cur_stickers.len
  sidebar_len = len
  count = floor(scroll_ystickers / ih)
  y = scroll_ystickers % ih - (ih / 2)
  
  w = frame.width
  loop floor(window_height / ih).clamp(0,len) (
    count ++
    local stk @= cur_stickers[count]
    loc 999 2 0 y
    square w 100 10 : c#window_colour
    if mouse_touching (
      square w 100 10 : c#prim
      if onclick (
        send_sticker stk.id current_channel
      )
    )
    loc 2 2 60 y
    image makeSticker(stk.id) 100 100
    text stk.name 10 : c#txtc chx#55
    y -= ih
  )
)


def "draw_sidebar" (
  if window.width !> 700 (
    return
  )

  w @= window
  local user_profile = current_guild == "@me" and current_member_ids.len == 2
  
  frame w.right - (shown.sidebar ? 300 30) w.top - 40 w.right w.top - 80 (
    loc 2 999 20 0
    icon shown.sidebar ? "left" "right" 0.8 : c#txtc
    if onclick (
      shown.sidebar = shown.sidebar.not()
    )
    
    if shown.sidebar and user_profile.not() (
      text "Members" 10 : chx#20
      if onclick (
        sidebar_mode = "members"
      )
      text "Stickers" 10 : chx#20
      if onclick (
        sidebar_mode = "stickers"
      )
    )
  )
  if shown.sidebar.not() (
    return
  )
  
  c seco
  frame w.right - 300 w.top - 80 w.right w.bottom sidebar_len - 0.5 * sidebar_ih sidebar_mode
  switch sidebar_mode (
    case "members"
      draw_members member_lists[current_guild[4]]
      break
    case "stickers"
      draw_stickers stickers
      break
    default
      sidebar_mode = "members"
      break
  )
  frame "clear"
)

loaded_cord = false
setup = () -> (
  array guilds = []
  object new_messages = {}
  object all_messages = {}
  object typing = {}
  object stickers = {}
  object guilds_last_channels = {}

  string current_reply = ""
  number attachment_offset = 40
  current_guild = ""
  current_channel = ""
  string current_attachment = ""
  
  object shown = {
    "sidebar": true,
    "channels": true
  }

  disc_connect
  // setStatus "online" "originCord"

  number guild_info_shift = 0

  object roles = {}
  object member_search = {}
  object member_lists = {}
  object all_members = {}
  object all_member_ids = {}
  array current_members = []
  object mention_picker = {}
  array guild_folders = []
  object guild_objects = {}
  array members_sidebar = []

  object presences = {}
  object pings = {}
  array deleted_messages = []
  object all_messages_by_id = {}
  
  boolean loaded_cord = true
)

mainloop:

window_tools:load_theme

c window_colour
pen "size" window.width + window.height
pen "opacity" 60

if loaded_cord.not() (
  array contents = saveContents().JsonParse()
  
  goto 0 window.top - 20
  square window.width 40 10 : c#prim
  loc 2 2 20 -20
  text "OriginCord - Pick A Token" 10 : c#txtc
  frame window.left + 360 window.top - 50 window.right window.bottom contents.len * 50 (
    number y = 25
    each token_file contents (
      goto -25 frame.top - y
      square frame.width - 80 30 10 : c#prim
      if mouse_touching (
        square frame.width - 80 30 10 : c#seco
        square frame.width - 80 30 5 : c#prim
        if onclick (
          token_in = token_file.saveGet()
          setup()
        )
      )
      change_x frame.width / -2 + 45
      text token_file.split(".").first() 10 : c#txtc
      goto frame.width / 2 - 30 frame.top - y
      square 30 30 10 : c#prim
      icon "bin" 0.8 : c#txtc
      if onclick (
        save token_file "delete"
      )
      y += 50
    )
  )
  
  frame window.left + 50 window.top - 50 window.left + 360 window.bottom (
    loc 2 2 10 -20
    text "Add Token (Only works with bots)" 9 : c#txtc
    
    goto 0 window.top - 80
    square frame.width - 30 25 10 : c#prim
    input frame.width - 35 25 "token_name" "Token Name..."
    
    goto 0 window.top - 120
    square frame.width - 30 25 10 : c#prim
    input frame.width - 35 25 "token_data" "Bot Token..."
    
    goto 0 window.top - 160
    if input_token_data != "" and input_token_name != "" (
      c seco
    ) else (
      c prim
    )
    square frame.width - 30 25 10
    if onclick and (input_token_name ++ input_token_data != "") (
      save input_token_name ++ ".txt" "set" input_token_data
      input_token_data = ""
      input_token_name = ""
    )
    change_x frame.left + 30
    icon "add" 0.5 : c#txtc
    text "Add Token" 9 : chx#15
  )
  
  import "win-buttons"
  exit
)

date = timestamp.timestamp("to-date")

heartbeat
if discord.wsOpen().not() (
  loaded_cord = false
  say "Failed/Lost Websocket Connection, Check Your Token Is Correct"
)

if discord.wsHasnew() (
  msg = discord.wsGetnext()
  string cmd = msg.t.toStr()
  dat = msg.d
  switch cmd (
    case "ready"
      object discord_user = dat.user
      string discord_id = discord_user.id.toStr()
      string discord_pfp = proxy ++ "https://cdn.discordapp.com/avatars/" ++ discord_id ++ "/" ++ discord_user.avatar ++ ".png"
      string discord_username = discord_user.username.toStr()
      number discord_isUser = (dat.user.bot != true).toNum()
      
      if discord_isUser == 1 (

        array discord_dms = dat.private_channels
        current_guild = "@me"
        
        for i discord_dms.len (
          _dat @= discord_dms[i]
          discord_dms[i].last_message_id = discord_dms[i].last_message_id.toNum()
          if _dat["type"] == 1 (
            discord_dms[i].name = displayNameOf(_dat.recipients[1])
          )
          if _dat["type"] == 3 and discord_dms[i].name == null (
            _name = ""
            each name _dat.recipients (
              _name += displayNameOf(name) ++ ", "
            )
            discord_dms[i].name = _name.trim(1,-3)
          )
        )
        
        discord_dms.sortBy("last_message_id")
        discord_dms.reverse()
        
        local current_guilds = dat.guilds
        guilds.append("@me")
        each guild current_guilds (
          handle_guild guild
        )
        
        pings = {}
        
        each this.read dat.read_state (
          new_messages[read.id] = false
          pings[read.id] = read.mention_count
        )
        array guild_folders = dat.user_settings.guild_folders
      )
      break
    case "GUILD_CREATE"
      handle_guild dat
      guild_folders.append({
        color: null,
        guild_ids: [dat.id],
        id: null,
        name: null,
      })
      break
    case "TYPING_START"
      number channel = dat.channel_id.toNum()
      temp = dat.member.user
      
      typing[channel] ??= []
      
      typing[channel] = typing[channel].append({
        "name": displayNameOf(temp),
        "user": temp.id,
        "timestamp": dat.timestamp * 1000
      })

      break
    case "MESSAGE_CREATE"
      number channel = dat.channel_id.toNum()
      content = dat.content.toStr()
      author = dat.author
      
      if typing[dat.channel_id].getKeys("user").contains(author.id) (
        temp = typing[dat.channel]
        id = author.id
        
        for i temp.len (
          if temp[i].user == id (
            temp.delete(i)
            i --
          )
        )
        
        typing[dat.channel_id] = temp
      )
      
      if dat.channel_id != "" (
        new_messages[dat.channel_id] = true
      )

      handle_message dat
      break
    case "MESSAGE_DELETE"
      deleted_messages.append(dat.id)
      break
    case "MESSAGE_UPDATE"
      all_messages_by_id[dat.message_id] @= dat
      break
    case "MESSAGE_ACK"
      new_messages[dat.channel_id] = false
      break
    case "PRESENCE_UPDATE"
      if dat.status == "offline" (
        dat.status = ""
      )
      presences[id].status = dat
      break
    case "GENERIC_PUSH_NOTIFICATION_SENT"
      notify dat.title
      break
    case "GUILD_MEMBER_UPDATE"
      local obj = {
        nick: dat.nick,
        roles: dat.roles,
        user: {
          avatar: dat.user.avatar,
          global_name: dat.user.global_name,
          nick: dat.nick
        }
      }
      obj.user.name = displayNameOf(obj.user)
      local idx = all_member_ids[dat.guild_id].index(dat.user.id)
      all_members[dat.guild_id][idx] ++= obj
      break
    case "GUILD_MEMBER_LIST_UPDATE"
      each op dat.ops (
        switch op.op (
          case "SYNC"
            member_lists[dat.guild_id] = op.items
            break
          case "DELETE"
            member_lists[dat.guild_id] = member_lists[dat.guild_id].delete(op.index + 1)
            break
          case "INSERT"
            member_lists[dat.guild_id] = member_lists[dat.guild_id].insert(op.index + 1, op.item)
            break
          case "UPDATE"
            member_lists[dat.guild_id][op.index + 1] = op.item
            break
        )
      )
      break
    case "MESSAGE_REACTION_ADD"
      local msg @= all_messages_by_id[dat.message_id]
      msg.reactions ??= []
      local key = dat.emoji.id == null ? "name" "id"
      local idx = msg.reactions.getKeys("emoji").getKeys(key).index(dat.emoji[key])
      if idx > 0 (
        msg.reactions[idx].count ++
      ) else (
        void msg.reactions.append({
          emoji: dat["emoji"],
          count: 1
        })
      )
      break
    case "MESSAGE_REACTION_REMOVE"
      local msg @= all_messages_by_id[dat.message_id]
      local key = dat.emoji.id == null ? "name" "id"
      local idx = msg.reactions.getKeys("emoji").getKeys(key).index(dat.emoji[key])
      if idx > 0 (
        msg.reactions[idx].count --
        if msg.reactions[idx].count < 1 (
          void msg.reactions.delete(idx)
        )
      )
      break
    case "CHANNEL_UNREAD_UPDATE"
      each this.chl dat.channel_unread_updates (
        new_messages[chl.id] = true
        new_messages[dat.guild_id] = true
      )
      break
    case "SESSIONS_REPLACE"
      presences[discord_id] = []
      for i dat (
        presences[discord_id] ++= dat[i]
      )
      break
  )
  dat = null
  msg = {}
)
if file_dropped != 0 (
  file "open" file_dropped "onlyaccess"
  current_attachment = [
    fileGet(14),
    fileGet(4)
  ]
  current_attachment.append(fileGet(2) ++ fileGet(1))
  
  file_dropped = 0
)

window "responsive" window.width !> 700

if current_guild != "@me" (
  current_members @= all_members[current_guild[4]] ?? []
  current_member_ids @= all_member_ids[current_guild[4]]
)

if current_channel != "" and current_channel != "0" (
  new_messages[current_channel] = false
  if loaded.contains(current_channel).not() (
    data = ("https://apps.mistium.com/get-discord-messages?channelid=" ++ current_channel ++ "&token=" ++ token ++ "&user_account=" ++ discord_isUser).getAsync()
    
    goto 0 0
    direction timer * 200
    icon "w 3 cutcircle 0 0 10 0 50" 1 : c#txtc
    direction 90
    if data != "Loading" (
      data @= data.JsonClean().reverse()
      number channel = current_channel.toNum()
      typing = {}
      each load_msg data (
        handle_message load_msg false
      )
      loaded.append(current_channel)
      data = ""
    )
  )
  clicked = false
  
  current_typing = typing[current_channel]
  draw_chat messages[current_channel]
) else (
  current_typing = []
)

if discord_isUser == 1 (
  draw_sidebar
)

f = chat_frame
x = (f.x - window.x).toNum()
y = (f.y - window.y).toNum()

mention_picker.match = input_message.match("/(?:[^<]|^)@([^ ]+)/")
if mention_picker.match.len > 0 (
  attachment_offset = 400
  frame f.left + x window.bottom + 400 f.right + x window.bottom + 55
  goto 0 0
  square frame.width - 25 frame.height - 25 15 : c#prim
  
  if mention_picker.temp != mention_picker.match[2] (
    mention_picker.temp = mention_picker.match[2]
    mention_list = []
    mention_users @= current_members.getKeys("user")
    
    i = 0
    while i < mention_users.len and mention_list.len < 7 (
      i ++
      _name = mention_users[i].name
      if _name.contains(mention_picker.temp) (
        arr = [
          _name,
          makepfp(mention_users[i]),
          mention_users[i].id,
        ]
        arr.append(mention_users[i].colour ?? txtc)
        mention_list.append(arr)
      )
    )
  )
  
  loc 2 2 30 -30
  c txtc
  each i mention_list (
    set_x 0
    square frame.width - 30 30 10 : c#window_colour
    if mouse_touching (
      square frame.width - 30 30 5 : c#prim
      if onclick (
        input_message.replace("/(?:[^<]|^)@([^ ]+)/","<@" ++ i[3] ++ ">")
      )
    )
    set_x frame.left + 30
    image i[2] 20 20
    text i[1] 10 : chx#20 c#i[4]
    change_y -47.5
  )

  frame "clear"
) else if current_reply != "" (
  attachment_offset = 70
  frame f.left + x window.bottom + 90 f.right + x window.bottom + 45
  member = memFromId(current_reply.author.id)
  goto 0 0
  square frame.width - 25 frame.height - 25 15 : c#prim
  set_x frame.left + 20
  text "Replying to " 9 : c#txtc
  c member.user.colour ?? txtc
  text member.user.name 9
  set_x frame.right - 20
  icon "close" 0.7 : c#txtc
  if onclick (
    current_reply = ""
  )
  frame "clear"
) else if current_attachment != "" (
  attachment_offset = 200
  frame f.left + x window.bottom + 200 f.right + x window.bottom + 55
  goto 0 0
  square frame.width - 25 frame.height - 25 15 : c#prim
  file "open" current_attachment[1] "onlyaccess"
  loc 2 2 30 -30
  file "render" 1.5 : c#txtc
  text current_attachment[3] 9 : c#txtc chx#30
  file "close"
  loc -2 2 -30 -30
  icon "close" 0.7
  if onclick (
    current_attachment = ""
  )
  frame "clear"
) else (
  attachment_offset = 40
)
loc 999 2 0 -20
square window_width 30 10 : c#prim
loc 2 2 20 -20
icon origincord_logo 1
text "originCord" 10 : c#txtc chx#20

if window.width > 700 (
  draw_guilds
)

current_guild_id = current_guild[4]

if shown.channels and window.width > 700 (
  if current_guild == "@me" (
    cur_channels @= discord_dms
  ) else (
    cur_channels @= current_guild[3]
  )
  draw_channels

  guild_info_shift = window.top - (current_guild[5].len == 32 ? 260 110)

  frame window.left + 50 window.top - 40 window.left + 360 guild_info_shift (
    if current_guild == "@me" (
      loc 2 -2 10 44
      text "Direct Messages" 10 : c#txtc
      
      loc 2 -2 10 22
      text "Total:" + discord_dms.len 10
    ) else if current_guild != "" (
      goto 0 30

      if current_guild[5].len == 32 (
        image proxy ++ "https://cdn.discordapp.com/banners/" ++ current_guild_id ++ "/" ++ current_guild[5] ++ ".png?size=512" frame.width frame.height - 60
      )
      loc 2 -2 10 44
      text current_guild[1] 10 : c#txtc

      loc 2 -2 10 22
      text current_guild[6] + "members" 10
    ) else (
      loc 2 2 10 -20
      text "Select A Guild To View Channels" 9 : c#txtc
    )
  )

  loc 2 -2 205 25
  square 300 30 10 : c#prim
  change_x -135
  if discord_pfp.startsWith("https://") (
    image discord_pfp 30 30
    icon circle_pfp 0.925
  )
  change_x 30
  text discord_username 9 : c#txtc
  
  loc 2 -2 340 25
  icon "close" 0.7
  if onclick (
    loaded_cord = false
    discord.wsClose()
  )
)

w = chat_frame.width - 25

total_typing = current_typing.len
if total_typing > 0 (
  goto x window.bottom + 15
  change_x w / -2 + 10
  c txtc
  if total_typing < 4 (
    each i cur current_typing (
      if timestamp - cur.timestamp > 10000 (
        current_typing.delete(i)
        typing[channel] = current_typing
        i --
      )
    )
    text current_typing.getKeys("name").join(" and ") 8
  ) else (
    text "Several People" 8
  )
  text total_typing == 1 ? " Is Typing" " Are Typing" 8
)

if typeof(inputs.message) != "array" (
  inputs.message @= [inputs.message]
)

local h = inputs.message.len + 1 * 23

import "win-buttons"

goto x window.bottom + 34 + (h / 2)

attachment_offset += h
square w h 10 : c#prim

change_x -20

textbox w - 40 h "message" 10 {
  line_numbers: false,
  bg_colour: prim
}

change_x w / 2
icon "send" 0.8 : c#txtc

send = inputs.message.join("\n").strip()
if "enter".isKeyDown() or onclick and "shift".isKeyDown().not() and send != "" (
  spl = send.split(" ")
  if send.startsWith(".eval") (
    local func = def() -> ()
    
    data = send.trim(7,-1)
    func.code = ("return " ++ data).oslCompile()
    
    async_msg data ++ " -> " ++ func() current_channel
    inputs.message = ""
    exit
  )
  if send.startsWith(".version") (
    async_msg "originCord v6.0" current_channel
    inputs.message = ""
    exit
  )
  if current_attachment == "" (
    if current_reply == "" (
      async_msg send current_channel
    ) else (
      link = "https://apps.mistium.com/discord-send-reply?token=" ++ token ++ "&channelid=" ++ current_channel ++ "&content=" ++ encodeURIComponent(send.toStr()) ++ "&messageid=" ++ current_reply.id ++ "&user_account=" ++ discord_isUser
      this.result = link.getAsync()
      current_reply = ""
    )
    if current_guild == "@me" (
      local result = discord_dms.getKeys("id").index(current_channel)
      local channel = discord_dms[result]
      discord_dms.delete(result)
      discord_dms.insert(1, channel)
    )
  ) else (
    send_file send current_channel current_attachment[3] current_attachment[2]
    current_attachment = null
  )
  inputs.message = ""
)
